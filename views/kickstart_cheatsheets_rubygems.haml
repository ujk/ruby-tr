-# coding: UTF-8

%script
  document.title = "Ruby Türkiye - Kickstart - rubygems"

%div.row
  %div.leaderboard
    %h1 Ruby GEM Klavuzu 
    %h4 
      Orjinali : 
      %a(href="https://github.com/JoshCheek/ruby-kickstart/blob/master/cheatsheets/rubygems.rb" target="_blank") Ruby-Kickstart
    %h4 Çeviren : Ümit Kayacık

%br

%div.row
  %div.span12
    %h4.sag regular_expressions.rb
    
    :coderay
      #!Ruby
      # =====  Gemler Nedir?  =====
      # Ruby'de sonradan eklenen kütüphanelere gem denir
      # rubygems.org adresinde Ruby'nin birçok gem'inin listesini bulabilirsiniz
      
      
      # =====  Nasıl Kurulurlar  =====
      # Bu adresde aradığınız gemi bulun , mesela BlueCloth, bu gem kurallı bir düz yazıyı html formata dönüştürür
      # http://rubygems.org/gems/bluecloth
      # orada nasıl kurulacağına dair bilgi vardır
      # $ gem install bluecloth
      #
      
      
      # =====  Kurduktan Sonra Ne Olur?  =====
      # Bir gem kurduğunuzda tüm bağımlılıkları da kurulacaktır
      # Bu sayede Sinatra kuruduğunuzda Rack da kurulacaktır
      # BlueCloth gem'in herhangibir bağımlılığı yoktur 
      
      # It also builds code that is written in a language that needs to be compiled (namely C)
      # So some libraries, like BlueCloth will require you to have a compiler available to use to compile the gem for your system

      # It also builds documentation in the form of ri, and rdoc
      # To use ri, go to the command line and type "$ ri topic", ie "$ ri String"
      # To use the rdocs, you can load up your own documentation server


      # =====  Documentation  =====
      # To load up your own documentation Server
      # $ gem server
      #
      # It will be hosted on some local port, probably 8808
      # Go to http://localhost:8808
      # Select the gem of interest, the docs are there (for example, my bluecloth is at)


      # =====  Where Else To Look When Figuring Out How To Use It  =====
      # I find a combination of resources helpful, docs are just one
      #
      # Looking through a gem's source code to see how they implement
      # A given method, or how the magic works, can be very helpful
      #
      # To get there, you you can go to your gem directory, see this with
      # $ gem environment
      # 
      # If you have gem-open ("$ gem install gem-open"), then you can open it directly with "$ gem open gemname"
      # 
      # If you just want to see it quickly, you can follow the link to the source host (probably github)
      # If you want to experiment with it, you can git clone the source code into a directory on your machine
      # Then you can play around without affecting your gems.
      #
      # A good example can also be very helpful, google + blogs can be your friend :)
      # Oftentimes there are also examples in the code
      #
      # Looking at what things the authors taken the time to test can show you how they expected it to be used
      # And what features and things they took the time to make sure work correctly
      # Tests will either be in /spec or /test directories.
      #
      # For example, looking at the BlueCloth homepage I didn't see anything helpful.
      # I loaded up the gem server, and felt unsure where the "overview" information was
      # I looked at spec/bluecloth_spec.rb and saw the spec
      # it "allows output to be rendered several times" do
      #   bc = BlueCloth.new( "Some text" )
      #   bc.to_html.should == bc.to_html
      # end
      #
      # Oh, I guess we can just drop our markdown into the constructor, and call the instance method to_html (see me do it below)


      # =====  Using Gems  =====
      # Gems become available to you in your ruby files
      # (On Ruby 1.8, you must require rubygems first.)
      require 'bluecloth'

      # now you are free to use it as you would any library, or even your own code
      topics = BlueCloth.new <<CHAPTER_DESCRIPTION
      * Arithmetic
      * Logic
      * Basic IO
      * Arrays
      CHAPTER_DESCRIPTION

      topics.to_html # => "<ul>\n<li>Arithmetic</li>\n<li>Logic</li>\n<li>Basic IO</li>\n<li>Arrays</li>\n</ul>"


      # =====  Executables  =====
      # Some gems have executables, if your rubygems are set up properly, they will be made available
      # BlueCloth, for example, has an executable. You can go see its source code in BlueCloth's bin directory
      # Here is an example of how to invoke it
      # $ bluecloth ~/code/JoshsRubyKickstart/README.mdown 
    %br



%hr

#disqus_thread
%script(type="text/javascript" async="true" src="http://ruby-tr.disqus.com/embed.js")
  
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
